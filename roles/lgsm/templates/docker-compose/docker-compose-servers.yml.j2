version: '3.7'
services:
{% for index in range(1, tournament_server_count + 1) %}
  csgoserver{{ '%02d' % index }}:
    image: "raks321/linuxgsm-docker:latest"
    container_name: csgoserver{{ '%02d' % index }}
    environment:
      - GAMESERVER=csgoserver
      - GAMESERVER_INSTANCE={{ '%02d' % index }}
      - LGSM_GITHUBUSER=GameServerManagers
      - LGSM_GITHUBREPO=LinuxGSM
      - LGSM_GITHUBBRANCH=master
    volumes:
      - "{{ csgo_server_path }}/serverfiles:/home/linuxgsm/serverfiles"
      - "{{ csgo_server_path }}/log:/home/linuxgsm/log"
      - "{{ csgo_server_path }}/config-lgsm:/home/linuxgsm/lgsm/config-lgsm"
    ports:
      - "270{{ '%02d' % index }}:270{{ '%02d' % index }}/tcp"
      - "270{{ '%02d' % index }}:270{{ '%02d' % index }}/udp"
      - "271{{ '%02d' % index }}:271{{ '%02d' % index }}/udp"
      - "272{{ '%02d' % index }}:272{{ '%02d' % index }}/udp"
      - "273{{ '%02d' % index }}:273{{ '%02d' % index }}/udp"
    restart: unless-stopped

{% endfor %}
  redis:
    image: redis:6
    command: redis-server --requirepass {{ vault_redis_server_password }}
    container_name: redis
    networks:
    - get5
    restart: always

  get5db:
    image: yobasystems/alpine-mariadb
    container_name: get5db
    restart: always
    networks:
      - get5
    volumes:
      - "{{ csgo_server_path }}/database:/var/lib/mysql"
    environment:
      - MYSQL_ROOT_PASSWORD={{ vault_mysql_root_password }}
      - MYSQL_DATABASE={{ vault_mysql_database }}
      - MYSQL_USER={{ vault_mysql_user }}
      - MYSQL_PASSWORD={{ vault_mysql_password }}
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_general_ci

  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    container_name: caddy-reverse-proxy
    restart: unless-stopped
    networks:
      - get5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDY_INGRESS_NETWORKS=get5

  g5api:
    image: ghcr.io/phlexplexico/g5api:latest
    depends_on:
      - get5db
    container_name: G5API
    networks:
      - get5
    labels:
      caddy: {{ vault_caddy_hostname }}
      caddy.handle_path: /api/*
      caddy.handle_path.0_reverse_proxy: {% raw %}"{{upstreams 3301}}"{% endraw %}

    volumes:
      - ./public:/Get5API/public
    environment:
      - NODE_ENV=production
      - PORT=3301
      - DBKEY={{ vault_g5api_dbkey }}
      - STEAMAPIKEY={{ vault_g5api_steamapikey }}
      - HOSTNAME=https://{{ vault_caddy_hostname }}
      - SHAREDSECRET={{ vault_g5api_sharedsecret }}
      - CLIENTHOME=https://{{ vault_caddy_hostname }}
      - APIURL=https://{{ vault_caddy_hostname }}/api
      - SQLUSER={{ vault_mysql_user }}
      - SQLPASSWORD={{ vault_mysql_password }}
      - SQLPORT=3306
      - DATABASE=get5
      - SQLHOST=get5db
      - ADMINS=
      - SUPERADMINS={{ tournament_server_admins | join(",") }}
      - REDISURL=redis://:{{ vault_redis_server_password }}@redis:6379
      - REDISTTL=86400
      - USEREDIS=true
      - UPLOADDEMOS=true
      - LOCALLOGINS=false
    restart: always

  g5v:
    image: ghcr.io/phlexplexico/g5v:latest
    depends_on:
      - g5api
    container_name: G5V-Front-End
    networks:
      - get5
    restart: always
    labels:
      caddy: {{ vault_caddy_hostname }}
      caddy.reverse_proxy: {% raw %}"{{upstreams}}"{% endraw %}

networks:
  get5:
    external: true
