- name: Copy docker-compose file
  ansible.builtin.template:
    src: templates/docker-compose/docker-compose-initial.yml.j2
    dest: "{{ csgo_server_path }}/docker-compose-initial.yml"
    owner: "{{ csgo_user_name }}"
    group: "{{ csgo_user_name }}"
    mode: 0644
  become: true

- name: Tear down existing services
  community.docker.docker_compose:
    project_src: "{{ csgo_server_path }}"
    files: docker-compose-initial.yml
    state: absent
  become: true

- name: Pull latest raks321/linuxgsm-docker image
  community.docker.docker_image:
    name: raks321/linuxgsm-docker
    source: pull
  become: true

- name: Check if initial csgo server files need to be installed
  ansible.builtin.stat:
    path: "{{ csgo_server_path }}/log/script/csgoserver-steamcmd.log"
  register: csgo_initial_install
  become: true

- name: Report if files are installed
  ansible.builtin.debug:
    msg: "CSGO Initial Server files have been installed"
  when: csgo_initial_install.stat.exists

- name: Install initial files
  community.docker.docker_compose:
    project_src: "{{ csgo_server_path }}"
    files: docker-compose-initial.yml
  when: not csgo_initial_install.stat.exists
  become: true

- name: Wait until service has installed or updated (1h timeout with 60s intervals)
  ansible.builtin.wait_for:
    path: "{{ csgo_server_path }}/log/script/csgoserver-script.log"
    search_regex: "Success! App '740' already up to date. | Success! App '740' fully installed. | No update available"
    delay: 30
    sleep: 60
    timeout: 3600
  when: not csgo_initial_install.stat.exists
  become: true

- name: Tear down existing services
  community.docker.docker_compose:
    project_src: "{{ csgo_server_path }}"
    files: docker-compose-initial.yml
    state: absent
  when: not csgo_initial_install.stat.exists
  become: true

- name: Folder for downloaded files
  ansible.builtin.file:
    path: "{{ csgo_server_path }}/downloads"
    state: directory
    owner: "{{ csgo_user_name }}"
    group: "{{ csgo_user_name }}"
    mode: 0755
  become: true

- name: Download csgo addons
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ csgo_server_path }}/downloads/{{ item.name }}-{{ item.version }}.tar.gz"
    mode: 0755
  loop:
    - "{{ sourcemod }}"
    - "{{ mmsource }}"
    - "{{ steamworks }}"
    - "{{ get5 }}"
    - "{{ get5ws }}"
  become: true

- name: Extract csgo addons
  ansible.builtin.unarchive:
    src: "{{ csgo_server_path }}/downloads/{{ item.name }}-{{ item.version }}.tar.gz"
    dest: "{{ csgo_server_path }}/serverfiles/csgo/addons"
    remote_src: true
    owner: "{{ csgo_user_name }}"
    group: "{{ csgo_user_name }}"
    mode: 0755
  loop:
    - "{{ sourcemod }}"
    - "{{ mmsource }}"
    - "{{ steamworks }}"
    - "{{ get5 }}"
    - "{{ get5ws }}"
  become: true

- name: Move using synchronize Steamworks to addons Folder
  ansible.posix.synchronize:
    src: "{{ csgo_server_path }}/serverfiles/csgo/addons/package/addons/"
    dest: "{{ csgo_server_path }}/serverfiles/csgo/addons/"
    mode: pull
  become: true

- name: Move using synchronize get5ws to sourcemod Folder
  ansible.posix.synchronize:
    src: "{{ csgo_server_path }}/serverfiles/csgo/addons/G5WS.smx"
    dest: "{{ csgo_server_path }}/serverfiles/csgo/addons/sourcemod/plugins/G5WS.smx"
    mode: pull
  become: true
