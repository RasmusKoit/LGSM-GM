---
- name: Get my seasons from get5api
  ansible.builtin.uri:
    url: "{{ get5api_url }}/seasons/myseasons"
    method: GET
    return_content: true
    status_code: [200, 404]
    headers:
      user-api: "{{ vault_get5api_key }}"
      Accept: application/json
  register: get5api_seasons
  when: (tournament_exists is not defined) or (tournament_exists.ansible_facts.tournament_exists | length == 0)

- name: Get my tournament from challonge
  ansible.builtin.uri:
    url: "{{ challonge_url }}/tournaments/{{ tournament_challonge_id }}.json"
    method: GET
    return_content: true
    status_code: 200
    headers:
      Accept: application/json
      Authorization-Type: v1
      Authorization: "{{ vault_challongeapi_key }}"
      Content-Type: application/vnd.api+json
  register: challonge_tournament
  when: (tournament_exists is not defined) or (tournament_exists.ansible_facts.tournament_exists | length == 0)

- name: Check if tournament is already in get5api
  ansible.builtin.set_fact:
    tournament_exists: "{{ get5api_seasons.json.seasons | selectattr('name', 'equalto', challonge_tournament.json.data.attributes.name) }}"
  register: tournament_exists

- name: Import tournament from Challonge to get5api if tournament doesn't exist
  ansible.builtin.uri:
    url: "{{ get5api_url }}/seasons/challonge"
    method: POST
    return_content: true
    status_code: 200
    headers:
      user-api: "{{ vault_get5api_key }}"
      Accept: application/json
      Content-Type: application/json
    body_format: json
    body: "{{ lookup('template', 'get5api_challonge.json.j2') }}"
  when: tournament_exists.ansible_facts.tournament_exists | length == 0
  register: get5api_tournament_import_response
